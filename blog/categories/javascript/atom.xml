<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: JavaScript | Art.sy Engineering]]></title>
  <link href="http://artsy.github.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://artsy.github.com/"/>
  <updated>2012-05-29T06:54:00-04:00</updated>
  <id>http://artsy.github.com/</id>
  <author>
    <name><![CDATA[Art.sy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How To Redirect Bang Hash Urls]]></title>
    <link href="http://artsy.github.com/blog/2012/03/06/how-to-redirect-bang-hash-urls/"/>
    <updated>2012-03-06T09:02:00-05:00</updated>
    <id>http://artsy.github.com/blog/2012/03/06/how-to-redirect-bang-hash-urls</id>
    <content type="html"><![CDATA[<p>Sometimes you type a hash-bang URL too fast, bang first.</p>

<p>Consider <code>http://art.sy/!#/log_in</code>. Rails will receive <code>/!</code> as the file path, resulting in a 404, File Not Found error. The part of the URL after the hash is a position within the page and is never sent to the web server.</p>

<p>It's actually pretty easy to handle this scenario and redirect to the corresponding hash-bang URL.</p>

<p>The most straightforward way is to create a file called <code>!.html</code> in your <code>public</code> folder and use JavaScript to rewrite the URL with the bang-hash.</p>

<p>``` html public/!.html
<html>
 <head>
 </head>
 <body>
  Click <a href="#" onclick="return window.redirect();">here</a> if you're not redirected ...
  <script language="javascript"></p>

<pre><code>window.redirect = function() {
  window.location = '/#!' + window.location.hash.substring(1)
  return false;
}
window.redirect();
</code></pre>

<p>  </script>
 </body>
</html>
```</p>

<p>You can also do this inside a controller with a view or layout. Start by trapping the URL in your <code>ApplicationController</code>.</p>

<p><code>ruby app/controllers/application_controller.rb
if request.env['PATH_INFO'] == '/!'
  render layout: "bang_hash"
  return
end
</code></p>

<p>The layout can have the piece of JavaScript that redirects to the corresponding hash-bang URL.</p>

<p>``` ruby app/views/layouts/bang_hash.html.haml
!!!
- ie_tag(:html) do
  %body</p>

<pre><code>:javascript
  window.location = '/#!' + window.location.hash.substring(1)
</code></pre>

<p>```</p>

<p>You can try this on <a href="http://art.sy/!#/log_in" target="_blank">http://art.sy/!#/log_in</a>. Watch it flip the bang-hash into a hash-bang and redirect to our login page. The redirect page could also be a good place to put an easter egg ;)</p>
]]></content>
  </entry>
  
</feed>
